"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _SwapActivityStatus = _interopRequireDefault(require("./SwapActivityStatus"));
var _SwapType = _interopRequireDefault(require("./SwapType"));
var _TransactionInitiatorType = _interopRequireDefault(require("./TransactionInitiatorType"));
var _TransactionRequestFee = _interopRequireDefault(require("./TransactionRequestFee"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The SwapActivity model module.
 * @module model/SwapActivity
 */
var SwapActivity = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>SwapActivity</code>.
   * @alias module:model/SwapActivity
   */
  function SwapActivity() {
    _classCallCheck(this, SwapActivity);
    SwapActivity.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(SwapActivity, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>SwapActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SwapActivity} obj Optional instance to populate.
     * @return {module:model/SwapActivity} The populated <code>SwapActivity</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new SwapActivity();
        if (data.hasOwnProperty('activity_id')) {
          obj['activity_id'] = _ApiClient["default"].convertToType(data['activity_id'], 'String');
        }
        if (data.hasOwnProperty('swap_type')) {
          obj['swap_type'] = _SwapType["default"].constructFromObject(data['swap_type']);
        }
        if (data.hasOwnProperty('status')) {
          obj['status'] = _SwapActivityStatus["default"].constructFromObject(data['status']);
        }
        if (data.hasOwnProperty('request_id')) {
          obj['request_id'] = _ApiClient["default"].convertToType(data['request_id'], 'String');
        }
        if (data.hasOwnProperty('wallet_id')) {
          obj['wallet_id'] = _ApiClient["default"].convertToType(data['wallet_id'], 'String');
        }
        if (data.hasOwnProperty('pay_token_id')) {
          obj['pay_token_id'] = _ApiClient["default"].convertToType(data['pay_token_id'], 'String');
        }
        if (data.hasOwnProperty('receive_token_id')) {
          obj['receive_token_id'] = _ApiClient["default"].convertToType(data['receive_token_id'], 'String');
        }
        if (data.hasOwnProperty('pay_amount')) {
          obj['pay_amount'] = _ApiClient["default"].convertToType(data['pay_amount'], 'String');
        }
        if (data.hasOwnProperty('receive_amount')) {
          obj['receive_amount'] = _ApiClient["default"].convertToType(data['receive_amount'], 'String');
        }
        if (data.hasOwnProperty('fee_token_id')) {
          obj['fee_token_id'] = _ApiClient["default"].convertToType(data['fee_token_id'], 'String');
        }
        if (data.hasOwnProperty('fee_amount')) {
          obj['fee_amount'] = _ApiClient["default"].convertToType(data['fee_amount'], 'String');
        }
        if (data.hasOwnProperty('initiator')) {
          obj['initiator'] = _ApiClient["default"].convertToType(data['initiator'], 'String');
        }
        if (data.hasOwnProperty('initiator_type')) {
          obj['initiator_type'] = _TransactionInitiatorType["default"].constructFromObject(data['initiator_type']);
        }
        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }
        if (data.hasOwnProperty('created_timestamp')) {
          obj['created_timestamp'] = _ApiClient["default"].convertToType(data['created_timestamp'], 'Number');
        }
        if (data.hasOwnProperty('updated_timestamp')) {
          obj['updated_timestamp'] = _ApiClient["default"].convertToType(data['updated_timestamp'], 'Number');
        }
        if (data.hasOwnProperty('network_fee')) {
          obj['network_fee'] = _TransactionRequestFee["default"].constructFromObject(data['network_fee']);
        }
        if (data.hasOwnProperty('destination_address')) {
          obj['destination_address'] = _ApiClient["default"].convertToType(data['destination_address'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SwapActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SwapActivity</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['activity_id'] && !(typeof data['activity_id'] === 'string' || data['activity_id'] instanceof String)) {
        throw new Error("Expected the field `activity_id` to be a primitive type in the JSON string but got " + data['activity_id']);
      }
      // ensure the json data is a string
      if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
        throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
      }
      // ensure the json data is a string
      if (data['wallet_id'] && !(typeof data['wallet_id'] === 'string' || data['wallet_id'] instanceof String)) {
        throw new Error("Expected the field `wallet_id` to be a primitive type in the JSON string but got " + data['wallet_id']);
      }
      // ensure the json data is a string
      if (data['pay_token_id'] && !(typeof data['pay_token_id'] === 'string' || data['pay_token_id'] instanceof String)) {
        throw new Error("Expected the field `pay_token_id` to be a primitive type in the JSON string but got " + data['pay_token_id']);
      }
      // ensure the json data is a string
      if (data['receive_token_id'] && !(typeof data['receive_token_id'] === 'string' || data['receive_token_id'] instanceof String)) {
        throw new Error("Expected the field `receive_token_id` to be a primitive type in the JSON string but got " + data['receive_token_id']);
      }
      // ensure the json data is a string
      if (data['pay_amount'] && !(typeof data['pay_amount'] === 'string' || data['pay_amount'] instanceof String)) {
        throw new Error("Expected the field `pay_amount` to be a primitive type in the JSON string but got " + data['pay_amount']);
      }
      // ensure the json data is a string
      if (data['receive_amount'] && !(typeof data['receive_amount'] === 'string' || data['receive_amount'] instanceof String)) {
        throw new Error("Expected the field `receive_amount` to be a primitive type in the JSON string but got " + data['receive_amount']);
      }
      // ensure the json data is a string
      if (data['fee_token_id'] && !(typeof data['fee_token_id'] === 'string' || data['fee_token_id'] instanceof String)) {
        throw new Error("Expected the field `fee_token_id` to be a primitive type in the JSON string but got " + data['fee_token_id']);
      }
      // ensure the json data is a string
      if (data['fee_amount'] && !(typeof data['fee_amount'] === 'string' || data['fee_amount'] instanceof String)) {
        throw new Error("Expected the field `fee_amount` to be a primitive type in the JSON string but got " + data['fee_amount']);
      }
      // ensure the json data is a string
      if (data['initiator'] && !(typeof data['initiator'] === 'string' || data['initiator'] instanceof String)) {
        throw new Error("Expected the field `initiator` to be a primitive type in the JSON string but got " + data['initiator']);
      }
      // ensure the json data is a string
      if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
        throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
      }
      // validate the optional field `network_fee`
      if (data['network_fee']) {
        // data not null
        if (!!_TransactionRequestFee["default"].validateJSON) {
          _TransactionRequestFee["default"].validateJSON(data['network_fee']);
        }
      }
      // ensure the json data is a string
      if (data['destination_address'] && !(typeof data['destination_address'] === 'string' || data['destination_address'] instanceof String)) {
        throw new Error("Expected the field `destination_address` to be a primitive type in the JSON string but got " + data['destination_address']);
      }
      return true;
    }
  }]);
}();
/**
 * The unique identifier of the swap activity.
 * @member {String} activity_id
 */
SwapActivity.prototype['activity_id'] = undefined;

/**
 * @member {module:model/SwapType} swap_type
 */
SwapActivity.prototype['swap_type'] = undefined;

/**
 * @member {module:model/SwapActivityStatus} status
 */
SwapActivity.prototype['status'] = undefined;

/**
 * The request id of the swap activity.
 * @member {String} request_id
 */
SwapActivity.prototype['request_id'] = undefined;

/**
 * The unique identifier of the wallet.
 * @member {String} wallet_id
 */
SwapActivity.prototype['wallet_id'] = undefined;

/**
 * The token ID to pay.
 * @member {String} pay_token_id
 */
SwapActivity.prototype['pay_token_id'] = undefined;

/**
 * The token ID to receive.
 * @member {String} receive_token_id
 */
SwapActivity.prototype['receive_token_id'] = undefined;

/**
 * The amount of tokens to bridge.
 * @member {String} pay_amount
 */
SwapActivity.prototype['pay_amount'] = undefined;

/**
 * The amount of tokens to receive.
 * @member {String} receive_amount
 */
SwapActivity.prototype['receive_amount'] = undefined;

/**
 * The fee token ID.
 * @member {String} fee_token_id
 */
SwapActivity.prototype['fee_token_id'] = undefined;

/**
 * The amount of fee.
 * @member {String} fee_amount
 */
SwapActivity.prototype['fee_amount'] = undefined;

/**
 * The initiator of the swap activity.
 * @member {String} initiator
 */
SwapActivity.prototype['initiator'] = undefined;

/**
 * @member {module:model/TransactionInitiatorType} initiator_type
 */
SwapActivity.prototype['initiator_type'] = undefined;

/**
 * The description of the swap activity.
 * @member {String} description
 */
SwapActivity.prototype['description'] = undefined;

/**
 * The time when the swap activity was created, in Unix timestamp format, measured in milliseconds.
 * @member {Number} created_timestamp
 */
SwapActivity.prototype['created_timestamp'] = undefined;

/**
 * The time when the swap activity was last updated, in Unix timestamp format, measured in milliseconds.
 * @member {Number} updated_timestamp
 */
SwapActivity.prototype['updated_timestamp'] = undefined;

/**
 * @member {module:model/TransactionRequestFee} network_fee
 */
SwapActivity.prototype['network_fee'] = undefined;

/**
 * the destination address of web3/mpc wallets.
 * @member {String} destination_address
 */
SwapActivity.prototype['destination_address'] = undefined;
var _default = exports["default"] = SwapActivity;