"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _ActivityInitiator = _interopRequireDefault(require("./ActivityInitiator"));
var _CreateStakeActivity = _interopRequireDefault(require("./CreateStakeActivity"));
var _CreateStakeActivityExtra = _interopRequireDefault(require("./CreateStakeActivityExtra"));
var _StakingPoolId = _interopRequireDefault(require("./StakingPoolId"));
var _StakingSource = _interopRequireDefault(require("./StakingSource"));
var _TransactionRequestFee = _interopRequireDefault(require("./TransactionRequestFee"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The CreateStakeActivityRequest model module.
 * @module model/CreateStakeActivityRequest
 */
var CreateStakeActivityRequest = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CreateStakeActivityRequest</code>.
   * @alias module:model/CreateStakeActivityRequest
   * @implements module:model/CreateStakeActivity
   * @implements module:model/ActivityInitiator
   * @param pool_id {module:model/StakingPoolId} 
   * @param amount {String} The amount to stake.
   * @param fee {module:model/TransactionRequestFee} 
   */
  function CreateStakeActivityRequest(pool_id, amount, fee) {
    _classCallCheck(this, CreateStakeActivityRequest);
    _CreateStakeActivity["default"].initialize(this, pool_id, amount, fee);
    _ActivityInitiator["default"].initialize(this);
    CreateStakeActivityRequest.initialize(this, pool_id, amount, fee);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(CreateStakeActivityRequest, null, [{
    key: "initialize",
    value: function initialize(obj, pool_id, amount, fee) {
      obj['pool_id'] = pool_id;
      obj['amount'] = amount;
      obj['fee'] = fee;
    }

    /**
     * Constructs a <code>CreateStakeActivityRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateStakeActivityRequest} obj Optional instance to populate.
     * @return {module:model/CreateStakeActivityRequest} The populated <code>CreateStakeActivityRequest</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CreateStakeActivityRequest();
        _CreateStakeActivity["default"].constructFromObject(data, obj);
        _ActivityInitiator["default"].constructFromObject(data, obj);
        if (data.hasOwnProperty('request_id')) {
          obj['request_id'] = _ApiClient["default"].convertToType(data['request_id'], 'String');
        }
        if (data.hasOwnProperty('source')) {
          obj['source'] = _StakingSource["default"].constructFromObject(data['source']);
        }
        if (data.hasOwnProperty('pool_id')) {
          obj['pool_id'] = _StakingPoolId["default"].constructFromObject(data['pool_id']);
        }
        if (data.hasOwnProperty('amount')) {
          obj['amount'] = _ApiClient["default"].convertToType(data['amount'], 'String');
        }
        if (data.hasOwnProperty('fee')) {
          obj['fee'] = _TransactionRequestFee["default"].constructFromObject(data['fee']);
        }
        if (data.hasOwnProperty('extra')) {
          obj['extra'] = _CreateStakeActivityExtra["default"].constructFromObject(data['extra']);
        }
        if (data.hasOwnProperty('app_initiator')) {
          obj['app_initiator'] = _ApiClient["default"].convertToType(data['app_initiator'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateStakeActivityRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateStakeActivityRequest</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(CreateStakeActivityRequest.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
        throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
      }
      // validate the optional field `source`
      if (data['source']) {
        // data not null
        if (!!_StakingSource["default"].validateJSON) {
          _StakingSource["default"].validateJSON(data['source']);
        }
      }
      // ensure the json data is a string
      if (data['amount'] && !(typeof data['amount'] === 'string' || data['amount'] instanceof String)) {
        throw new Error("Expected the field `amount` to be a primitive type in the JSON string but got " + data['amount']);
      }
      // validate the optional field `fee`
      if (data['fee']) {
        // data not null
        if (!!_TransactionRequestFee["default"].validateJSON) {
          _TransactionRequestFee["default"].validateJSON(data['fee']);
        }
      }
      // validate the optional field `extra`
      if (data['extra']) {
        // data not null
        if (!!_CreateStakeActivityExtra["default"].validateJSON) {
          _CreateStakeActivityExtra["default"].validateJSON(data['extra']);
        }
      }
      // ensure the json data is a string
      if (data['app_initiator'] && !(typeof data['app_initiator'] === 'string' || data['app_initiator'] instanceof String)) {
        throw new Error("Expected the field `app_initiator` to be a primitive type in the JSON string but got " + data['app_initiator']);
      }
      return true;
    }
  }]);
}();
CreateStakeActivityRequest.RequiredProperties = ["pool_id", "amount", "fee"];

/**
 * The request ID that is used to track a request. The request ID is provided by you and must be unique within your organization.
 * @member {String} request_id
 */
CreateStakeActivityRequest.prototype['request_id'] = undefined;

/**
 * @member {module:model/StakingSource} source
 */
CreateStakeActivityRequest.prototype['source'] = undefined;

/**
 * @member {module:model/StakingPoolId} pool_id
 */
CreateStakeActivityRequest.prototype['pool_id'] = undefined;

/**
 * The amount to stake.
 * @member {String} amount
 */
CreateStakeActivityRequest.prototype['amount'] = undefined;

/**
 * @member {module:model/TransactionRequestFee} fee
 */
CreateStakeActivityRequest.prototype['fee'] = undefined;

/**
 * @member {module:model/CreateStakeActivityExtra} extra
 */
CreateStakeActivityRequest.prototype['extra'] = undefined;

/**
 * The initiator of the staking activity. If you do not specify this property, the WaaS service will automatically designate the API key as the initiator.
 * @member {String} app_initiator
 */
CreateStakeActivityRequest.prototype['app_initiator'] = undefined;

// Implement CreateStakeActivity interface:
/**
 * The request ID that is used to track a request. The request ID is provided by you and must be unique within your organization.
 * @member {String} request_id
 */
_CreateStakeActivity["default"].prototype['request_id'] = undefined;
/**
 * @member {module:model/StakingSource} source
 */
_CreateStakeActivity["default"].prototype['source'] = undefined;
/**
 * @member {module:model/StakingPoolId} pool_id
 */
_CreateStakeActivity["default"].prototype['pool_id'] = undefined;
/**
 * The amount to stake.
 * @member {String} amount
 */
_CreateStakeActivity["default"].prototype['amount'] = undefined;
/**
 * @member {module:model/TransactionRequestFee} fee
 */
_CreateStakeActivity["default"].prototype['fee'] = undefined;
/**
 * @member {module:model/CreateStakeActivityExtra} extra
 */
_CreateStakeActivity["default"].prototype['extra'] = undefined;
// Implement ActivityInitiator interface:
/**
 * The initiator of the staking activity. If you do not specify this property, the WaaS service will automatically designate the API key as the initiator.
 * @member {String} app_initiator
 */
_ActivityInitiator["default"].prototype['app_initiator'] = undefined;
var _default = exports["default"] = CreateStakeActivityRequest;