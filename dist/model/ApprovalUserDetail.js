"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _ApprovalResult = _interopRequireDefault(require("./ApprovalResult"));
var _ApprovalShowInfo = _interopRequireDefault(require("./ApprovalShowInfo"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The ApprovalUserDetail model module.
 * @module model/ApprovalUserDetail
 */
var ApprovalUserDetail = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ApprovalUserDetail</code>.
   * The user detail for a transaction approval. This includes the user&#39;s email, public key, signature, statement UUID, result of the approval, creation time, template version, header title, whether it is for signing, and additional information to show. 
   * @alias module:model/ApprovalUserDetail
   */
  function ApprovalUserDetail() {
    _classCallCheck(this, ApprovalUserDetail);
    ApprovalUserDetail.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(ApprovalUserDetail, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>ApprovalUserDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApprovalUserDetail} obj Optional instance to populate.
     * @return {module:model/ApprovalUserDetail} The populated <code>ApprovalUserDetail</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ApprovalUserDetail();
        if (data.hasOwnProperty('user_email')) {
          obj['user_email'] = _ApiClient["default"].convertToType(data['user_email'], 'String');
        }
        if (data.hasOwnProperty('pubkey')) {
          obj['pubkey'] = _ApiClient["default"].convertToType(data['pubkey'], 'String');
        }
        if (data.hasOwnProperty('signature')) {
          obj['signature'] = _ApiClient["default"].convertToType(data['signature'], 'String');
        }
        if (data.hasOwnProperty('statement_uuid')) {
          obj['statement_uuid'] = _ApiClient["default"].convertToType(data['statement_uuid'], 'String');
        }
        if (data.hasOwnProperty('result')) {
          obj['result'] = _ApprovalResult["default"].constructFromObject(data['result']);
        }
        if (data.hasOwnProperty('created_time')) {
          obj['created_time'] = _ApiClient["default"].convertToType(data['created_time'], 'Number');
        }
        if (data.hasOwnProperty('template_version')) {
          obj['template_version'] = _ApiClient["default"].convertToType(data['template_version'], 'String');
        }
        if (data.hasOwnProperty('header_title')) {
          obj['header_title'] = _ApiClient["default"].convertToType(data['header_title'], 'String');
        }
        if (data.hasOwnProperty('is_for_sign')) {
          obj['is_for_sign'] = _ApiClient["default"].convertToType(data['is_for_sign'], 'Boolean');
        }
        if (data.hasOwnProperty('show_info')) {
          obj['show_info'] = _ApprovalShowInfo["default"].constructFromObject(data['show_info']);
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApprovalUserDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApprovalUserDetail</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['user_email'] && !(typeof data['user_email'] === 'string' || data['user_email'] instanceof String)) {
        throw new Error("Expected the field `user_email` to be a primitive type in the JSON string but got " + data['user_email']);
      }
      // ensure the json data is a string
      if (data['pubkey'] && !(typeof data['pubkey'] === 'string' || data['pubkey'] instanceof String)) {
        throw new Error("Expected the field `pubkey` to be a primitive type in the JSON string but got " + data['pubkey']);
      }
      // ensure the json data is a string
      if (data['signature'] && !(typeof data['signature'] === 'string' || data['signature'] instanceof String)) {
        throw new Error("Expected the field `signature` to be a primitive type in the JSON string but got " + data['signature']);
      }
      // ensure the json data is a string
      if (data['statement_uuid'] && !(typeof data['statement_uuid'] === 'string' || data['statement_uuid'] instanceof String)) {
        throw new Error("Expected the field `statement_uuid` to be a primitive type in the JSON string but got " + data['statement_uuid']);
      }
      // ensure the json data is a string
      if (data['template_version'] && !(typeof data['template_version'] === 'string' || data['template_version'] instanceof String)) {
        throw new Error("Expected the field `template_version` to be a primitive type in the JSON string but got " + data['template_version']);
      }
      // ensure the json data is a string
      if (data['header_title'] && !(typeof data['header_title'] === 'string' || data['header_title'] instanceof String)) {
        throw new Error("Expected the field `header_title` to be a primitive type in the JSON string but got " + data['header_title']);
      }
      // validate the optional field `show_info`
      if (data['show_info']) {
        // data not null
        if (!!_ApprovalShowInfo["default"].validateJSON) {
          _ApprovalShowInfo["default"].validateJSON(data['show_info']);
        }
      }
      return true;
    }
  }]);
}();
/**
 * The email address of the user who approved the transaction.
 * @member {String} user_email
 */
ApprovalUserDetail.prototype['user_email'] = undefined;

/**
 * The public key of the user who approved the transaction.
 * @member {String} pubkey
 */
ApprovalUserDetail.prototype['pubkey'] = undefined;

/**
 * The signature of the transaction approval.
 * @member {String} signature
 */
ApprovalUserDetail.prototype['signature'] = undefined;

/**
 * The UUID of the statement associated with the transaction approval.
 * @member {String} statement_uuid
 */
ApprovalUserDetail.prototype['statement_uuid'] = undefined;

/**
 * @member {module:model/ApprovalResult} result
 */
ApprovalUserDetail.prototype['result'] = undefined;

/**
 * The timestamp when the approval was created.
 * @member {Number} created_time
 */
ApprovalUserDetail.prototype['created_time'] = undefined;

/**
 * The version of the template used for the transaction approval.
 * @member {String} template_version
 */
ApprovalUserDetail.prototype['template_version'] = undefined;

/**
 * The title of the header for the transaction approval.
 * @member {String} header_title
 */
ApprovalUserDetail.prototype['header_title'] = undefined;

/**
 * Indicates whether the approval is for signing.
 * @member {Boolean} is_for_sign
 */
ApprovalUserDetail.prototype['is_for_sign'] = undefined;

/**
 * @member {module:model/ApprovalShowInfo} show_info
 */
ApprovalUserDetail.prototype['show_info'] = undefined;
var _default = exports["default"] = ApprovalUserDetail;