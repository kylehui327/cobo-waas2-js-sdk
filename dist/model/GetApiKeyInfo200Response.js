"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _RoleScopes = _interopRequireDefault(require("./RoleScopes"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The GetApiKeyInfo200Response model module.
 * @module model/GetApiKeyInfo200Response
 */
var GetApiKeyInfo200Response = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GetApiKeyInfo200Response</code>.
   * @alias module:model/GetApiKeyInfo200Response
   * @param name {String} The API key name.
   * @param curve_type {module:model/GetApiKeyInfo200Response.CurveTypeEnum} The curve type used for the API key, which determines the cryptographic algorithm for key generation and signing. Possible values include: - `ED25519`: Ed25519 - `SECP256K1`: Secp256k1 
   * @param key {String} The API key value.
   * @param created_timestamp {Number} The time when the API key was registered, in Unix timestamp format, measured in milliseconds.
   * @param updated_timestamp {Number} The time when the API key information was last updated, in Unix timestamp format, measured in milliseconds.
   */
  function GetApiKeyInfo200Response(name, curve_type, key, created_timestamp, updated_timestamp) {
    _classCallCheck(this, GetApiKeyInfo200Response);
    GetApiKeyInfo200Response.initialize(this, name, curve_type, key, created_timestamp, updated_timestamp);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(GetApiKeyInfo200Response, null, [{
    key: "initialize",
    value: function initialize(obj, name, curve_type, key, created_timestamp, updated_timestamp) {
      obj['name'] = name;
      obj['curve_type'] = curve_type;
      obj['key'] = key;
      obj['created_timestamp'] = created_timestamp;
      obj['updated_timestamp'] = updated_timestamp;
    }

    /**
     * Constructs a <code>GetApiKeyInfo200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetApiKeyInfo200Response} obj Optional instance to populate.
     * @return {module:model/GetApiKeyInfo200Response} The populated <code>GetApiKeyInfo200Response</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GetApiKeyInfo200Response();
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }
        if (data.hasOwnProperty('curve_type')) {
          obj['curve_type'] = _ApiClient["default"].convertToType(data['curve_type'], 'String');
        }
        if (data.hasOwnProperty('key')) {
          obj['key'] = _ApiClient["default"].convertToType(data['key'], 'String');
        }
        if (data.hasOwnProperty('callback_url')) {
          obj['callback_url'] = _ApiClient["default"].convertToType(data['callback_url'], 'String');
        }
        if (data.hasOwnProperty('valid_ips')) {
          obj['valid_ips'] = _ApiClient["default"].convertToType(data['valid_ips'], ['String']);
        }
        if (data.hasOwnProperty('created_timestamp')) {
          obj['created_timestamp'] = _ApiClient["default"].convertToType(data['created_timestamp'], 'Number');
        }
        if (data.hasOwnProperty('updated_timestamp')) {
          obj['updated_timestamp'] = _ApiClient["default"].convertToType(data['updated_timestamp'], 'Number');
        }
        if (data.hasOwnProperty('expired_timestamp')) {
          obj['expired_timestamp'] = _ApiClient["default"].convertToType(data['expired_timestamp'], 'Number');
        }
        if (data.hasOwnProperty('role_scopes')) {
          obj['role_scopes'] = _ApiClient["default"].convertToType(data['role_scopes'], [_RoleScopes["default"]]);
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetApiKeyInfo200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetApiKeyInfo200Response</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(GetApiKeyInfo200Response.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      }
      // ensure the json data is a string
      if (data['curve_type'] && !(typeof data['curve_type'] === 'string' || data['curve_type'] instanceof String)) {
        throw new Error("Expected the field `curve_type` to be a primitive type in the JSON string but got " + data['curve_type']);
      }
      // ensure the json data is a string
      if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
        throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
      }
      // ensure the json data is a string
      if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
        throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
      }
      // ensure the json data is an array
      if (!Array.isArray(data['valid_ips'])) {
        throw new Error("Expected the field `valid_ips` to be an array in the JSON data but got " + data['valid_ips']);
      }
      if (data['role_scopes']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['role_scopes'])) {
          throw new Error("Expected the field `role_scopes` to be an array in the JSON data but got " + data['role_scopes']);
        }
        // validate the optional field `role_scopes` (array)
        var _iterator2 = _createForOfIteratorHelper(data['role_scopes']),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var item = _step2.value;
            _RoleScopes["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        ;
      }
      return true;
    }
  }]);
}();
GetApiKeyInfo200Response.RequiredProperties = ["name", "curve_type", "key", "created_timestamp", "updated_timestamp"];

/**
 * The API key name.
 * @member {String} name
 */
GetApiKeyInfo200Response.prototype['name'] = undefined;

/**
 * The curve type used for the API key, which determines the cryptographic algorithm for key generation and signing. Possible values include: - `ED25519`: Ed25519 - `SECP256K1`: Secp256k1 
 * @member {module:model/GetApiKeyInfo200Response.CurveTypeEnum} curve_type
 */
GetApiKeyInfo200Response.prototype['curve_type'] = undefined;

/**
 * The API key value.
 * @member {String} key
 */
GetApiKeyInfo200Response.prototype['key'] = undefined;

/**
 * The URL of the callback endpoint that receives callback messages triggered by this API key.
 * @member {String} callback_url
 */
GetApiKeyInfo200Response.prototype['callback_url'] = undefined;

/**
 * (Applicable to permanent API keys only) The list of IP addresses that are allowed to use this API key.
 * @member {Array.<String>} valid_ips
 */
GetApiKeyInfo200Response.prototype['valid_ips'] = undefined;

/**
 * The time when the API key was registered, in Unix timestamp format, measured in milliseconds.
 * @member {Number} created_timestamp
 */
GetApiKeyInfo200Response.prototype['created_timestamp'] = undefined;

/**
 * The time when the API key information was last updated, in Unix timestamp format, measured in milliseconds.
 * @member {Number} updated_timestamp
 */
GetApiKeyInfo200Response.prototype['updated_timestamp'] = undefined;

/**
 * The time when the API key expires, in Unix timestamp format, measured in milliseconds. For permanent API keys, this property value is `null`.
 * @member {Number} expired_timestamp
 */
GetApiKeyInfo200Response.prototype['expired_timestamp'] = undefined;

/**
 * The list of user roles and wallet scopes associated with the API key.
 * @member {Array.<module:model/RoleScopes>} role_scopes
 */
GetApiKeyInfo200Response.prototype['role_scopes'] = undefined;

/**
 * Allowed values for the <code>curve_type</code> property.
 * @enum {String}
 * @readonly
 */
GetApiKeyInfo200Response['CurveTypeEnum'] = {
  /**
   * value: "ED25519"
   * @const
   */
  "ED25519": "ED25519",
  /**
   * value: "SECP256K1"
   * @const
   */
  "SECP256K1": "SECP256K1",
  /**
   * value: "unknown_default_open_api"
   * @const
   */
  "unknown_default_open_api": "unknown_default_open_api"
};
var _default = exports["default"] = GetApiKeyInfo200Response;