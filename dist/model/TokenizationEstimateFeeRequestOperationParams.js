"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _TokenizationBurnEstimateFeeParams = _interopRequireDefault(require("./TokenizationBurnEstimateFeeParams"));
var _TokenizationBurnTokenParamsBurnsInner = _interopRequireDefault(require("./TokenizationBurnTokenParamsBurnsInner"));
var _TokenizationContractCallEstimateFeeParams = _interopRequireDefault(require("./TokenizationContractCallEstimateFeeParams"));
var _TokenizationContractCallParamsData = _interopRequireDefault(require("./TokenizationContractCallParamsData"));
var _TokenizationIssueEstimateFeeParams = _interopRequireDefault(require("./TokenizationIssueEstimateFeeParams"));
var _TokenizationIssueTokenParamsTokenParams = _interopRequireDefault(require("./TokenizationIssueTokenParamsTokenParams"));
var _TokenizationMintEstimateFeeParams = _interopRequireDefault(require("./TokenizationMintEstimateFeeParams"));
var _TokenizationMintTokenParamsMintsInner = _interopRequireDefault(require("./TokenizationMintTokenParamsMintsInner"));
var _TokenizationOperationType = _interopRequireDefault(require("./TokenizationOperationType"));
var _TokenizationPauseEstimateFeeParams = _interopRequireDefault(require("./TokenizationPauseEstimateFeeParams"));
var _TokenizationToggleAllowlistEstimateFeeParams = _interopRequireDefault(require("./TokenizationToggleAllowlistEstimateFeeParams"));
var _TokenizationTokenOperationSource = _interopRequireDefault(require("./TokenizationTokenOperationSource"));
var _TokenizationUnpauseEstimateFeeParams = _interopRequireDefault(require("./TokenizationUnpauseEstimateFeeParams"));
var _TokenizationUpdateAddressAction = _interopRequireDefault(require("./TokenizationUpdateAddressAction"));
var _TokenizationUpdateAllowlistAddressesEstimateFeeParams = _interopRequireDefault(require("./TokenizationUpdateAllowlistAddressesEstimateFeeParams"));
var _TokenizationUpdateBlocklistAddressesEstimateFeeParams = _interopRequireDefault(require("./TokenizationUpdateBlocklistAddressesEstimateFeeParams"));
var _TokenizationUpdateBlocklistAddressesParamsAddressesInner = _interopRequireDefault(require("./TokenizationUpdateBlocklistAddressesParamsAddressesInner"));
var _TokenizationEstimateFeeRequestOperationParams;
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The TokenizationEstimateFeeRequestOperationParams model module.
 * @module model/TokenizationEstimateFeeRequestOperationParams
 */
var TokenizationEstimateFeeRequestOperationParams = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>TokenizationEstimateFeeRequestOperationParams</code>.
   * @alias module:model/TokenizationEstimateFeeRequestOperationParams
   * @param {(module:model/TokenizationBurnEstimateFeeParams|module:model/TokenizationContractCallEstimateFeeParams|module:model/TokenizationIssueEstimateFeeParams|module:model/TokenizationMintEstimateFeeParams|module:model/TokenizationPauseEstimateFeeParams|module:model/TokenizationToggleAllowlistEstimateFeeParams|module:model/TokenizationUnpauseEstimateFeeParams|module:model/TokenizationUpdateAllowlistAddressesEstimateFeeParams|module:model/TokenizationUpdateBlocklistAddressesEstimateFeeParams)} instance The actual instance to initialize TokenizationEstimateFeeRequestOperationParams.
   */
  function TokenizationEstimateFeeRequestOperationParams() {
    var instance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    _classCallCheck(this, TokenizationEstimateFeeRequestOperationParams);
    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    _defineProperty(this, "toJSON", function () {
      return this.getActualInstance();
    });
    if (instance === null) {
      this.actualInstance = null;
      return;
    }
    var match = 0;
    var errorMessages = [];
    var discriminatorValue = instance["operation_type"];
    if (discriminatorValue) {
      switch (discriminatorValue) {
        case "Burn":
          this.actualInstance = _TokenizationBurnEstimateFeeParams["default"].constructFromObject(instance);
          match++;
          break;
        case "ContractCall":
          this.actualInstance = _TokenizationContractCallEstimateFeeParams["default"].constructFromObject(instance);
          match++;
          break;
        case "Issue":
          this.actualInstance = _TokenizationIssueEstimateFeeParams["default"].constructFromObject(instance);
          match++;
          break;
        case "Mint":
          this.actualInstance = _TokenizationMintEstimateFeeParams["default"].constructFromObject(instance);
          match++;
          break;
        case "Pause":
          this.actualInstance = _TokenizationPauseEstimateFeeParams["default"].constructFromObject(instance);
          match++;
          break;
        case "ToggleAllowlist":
          this.actualInstance = _TokenizationToggleAllowlistEstimateFeeParams["default"].constructFromObject(instance);
          match++;
          break;
        case "Unpause":
          this.actualInstance = _TokenizationUnpauseEstimateFeeParams["default"].constructFromObject(instance);
          match++;
          break;
        case "UpdateAllowlistAddresses":
          this.actualInstance = _TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"].constructFromObject(instance);
          match++;
          break;
        case "UpdateBlocklistAddresses":
          this.actualInstance = _TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"].constructFromObject(instance);
          match++;
          break;
        default:
          errorMessages.push("Unrecognized discriminator value: " + discriminatorValue);
          break;
      }
      return;
    }
    try {
      if (instance instanceof _TokenizationIssueEstimateFeeParams["default"]) {
        this.actualInstance = instance;
      } else if (!!_TokenizationIssueEstimateFeeParams["default"].validateJSON && _TokenizationIssueEstimateFeeParams["default"].validateJSON(instance)) {
        // plain JS object
        // create TokenizationIssueEstimateFeeParams from JS object
        this.actualInstance = _TokenizationIssueEstimateFeeParams["default"].constructFromObject(instance);
      } else {
        if (_TokenizationIssueEstimateFeeParams["default"].constructFromObject(instance)) {
          if (!!_TokenizationIssueEstimateFeeParams["default"].constructFromObject(instance).toJSON) {
            if (_TokenizationIssueEstimateFeeParams["default"].constructFromObject(instance).toJSON()) {
              this.actualInstance = _TokenizationIssueEstimateFeeParams["default"].constructFromObject(instance);
            }
          } else {
            this.actualInstance = _TokenizationIssueEstimateFeeParams["default"].constructFromObject(instance);
          }
        }
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TokenizationIssueEstimateFeeParams
      errorMessages.push("Failed to construct TokenizationIssueEstimateFeeParams: " + err);
    }
    try {
      if (instance instanceof _TokenizationMintEstimateFeeParams["default"]) {
        this.actualInstance = instance;
      } else if (!!_TokenizationMintEstimateFeeParams["default"].validateJSON && _TokenizationMintEstimateFeeParams["default"].validateJSON(instance)) {
        // plain JS object
        // create TokenizationMintEstimateFeeParams from JS object
        this.actualInstance = _TokenizationMintEstimateFeeParams["default"].constructFromObject(instance);
      } else {
        if (_TokenizationMintEstimateFeeParams["default"].constructFromObject(instance)) {
          if (!!_TokenizationMintEstimateFeeParams["default"].constructFromObject(instance).toJSON) {
            if (_TokenizationMintEstimateFeeParams["default"].constructFromObject(instance).toJSON()) {
              this.actualInstance = _TokenizationMintEstimateFeeParams["default"].constructFromObject(instance);
            }
          } else {
            this.actualInstance = _TokenizationMintEstimateFeeParams["default"].constructFromObject(instance);
          }
        }
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TokenizationMintEstimateFeeParams
      errorMessages.push("Failed to construct TokenizationMintEstimateFeeParams: " + err);
    }
    try {
      if (instance instanceof _TokenizationBurnEstimateFeeParams["default"]) {
        this.actualInstance = instance;
      } else if (!!_TokenizationBurnEstimateFeeParams["default"].validateJSON && _TokenizationBurnEstimateFeeParams["default"].validateJSON(instance)) {
        // plain JS object
        // create TokenizationBurnEstimateFeeParams from JS object
        this.actualInstance = _TokenizationBurnEstimateFeeParams["default"].constructFromObject(instance);
      } else {
        if (_TokenizationBurnEstimateFeeParams["default"].constructFromObject(instance)) {
          if (!!_TokenizationBurnEstimateFeeParams["default"].constructFromObject(instance).toJSON) {
            if (_TokenizationBurnEstimateFeeParams["default"].constructFromObject(instance).toJSON()) {
              this.actualInstance = _TokenizationBurnEstimateFeeParams["default"].constructFromObject(instance);
            }
          } else {
            this.actualInstance = _TokenizationBurnEstimateFeeParams["default"].constructFromObject(instance);
          }
        }
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TokenizationBurnEstimateFeeParams
      errorMessages.push("Failed to construct TokenizationBurnEstimateFeeParams: " + err);
    }
    try {
      if (instance instanceof _TokenizationPauseEstimateFeeParams["default"]) {
        this.actualInstance = instance;
      } else if (!!_TokenizationPauseEstimateFeeParams["default"].validateJSON && _TokenizationPauseEstimateFeeParams["default"].validateJSON(instance)) {
        // plain JS object
        // create TokenizationPauseEstimateFeeParams from JS object
        this.actualInstance = _TokenizationPauseEstimateFeeParams["default"].constructFromObject(instance);
      } else {
        if (_TokenizationPauseEstimateFeeParams["default"].constructFromObject(instance)) {
          if (!!_TokenizationPauseEstimateFeeParams["default"].constructFromObject(instance).toJSON) {
            if (_TokenizationPauseEstimateFeeParams["default"].constructFromObject(instance).toJSON()) {
              this.actualInstance = _TokenizationPauseEstimateFeeParams["default"].constructFromObject(instance);
            }
          } else {
            this.actualInstance = _TokenizationPauseEstimateFeeParams["default"].constructFromObject(instance);
          }
        }
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TokenizationPauseEstimateFeeParams
      errorMessages.push("Failed to construct TokenizationPauseEstimateFeeParams: " + err);
    }
    try {
      if (instance instanceof _TokenizationUnpauseEstimateFeeParams["default"]) {
        this.actualInstance = instance;
      } else if (!!_TokenizationUnpauseEstimateFeeParams["default"].validateJSON && _TokenizationUnpauseEstimateFeeParams["default"].validateJSON(instance)) {
        // plain JS object
        // create TokenizationUnpauseEstimateFeeParams from JS object
        this.actualInstance = _TokenizationUnpauseEstimateFeeParams["default"].constructFromObject(instance);
      } else {
        if (_TokenizationUnpauseEstimateFeeParams["default"].constructFromObject(instance)) {
          if (!!_TokenizationUnpauseEstimateFeeParams["default"].constructFromObject(instance).toJSON) {
            if (_TokenizationUnpauseEstimateFeeParams["default"].constructFromObject(instance).toJSON()) {
              this.actualInstance = _TokenizationUnpauseEstimateFeeParams["default"].constructFromObject(instance);
            }
          } else {
            this.actualInstance = _TokenizationUnpauseEstimateFeeParams["default"].constructFromObject(instance);
          }
        }
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TokenizationUnpauseEstimateFeeParams
      errorMessages.push("Failed to construct TokenizationUnpauseEstimateFeeParams: " + err);
    }
    try {
      if (instance instanceof _TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"]) {
        this.actualInstance = instance;
      } else if (!!_TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"].validateJSON && _TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"].validateJSON(instance)) {
        // plain JS object
        // create TokenizationUpdateAllowlistAddressesEstimateFeeParams from JS object
        this.actualInstance = _TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"].constructFromObject(instance);
      } else {
        if (_TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"].constructFromObject(instance)) {
          if (!!_TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"].constructFromObject(instance).toJSON) {
            if (_TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"].constructFromObject(instance).toJSON()) {
              this.actualInstance = _TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"].constructFromObject(instance);
            }
          } else {
            this.actualInstance = _TokenizationUpdateAllowlistAddressesEstimateFeeParams["default"].constructFromObject(instance);
          }
        }
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TokenizationUpdateAllowlistAddressesEstimateFeeParams
      errorMessages.push("Failed to construct TokenizationUpdateAllowlistAddressesEstimateFeeParams: " + err);
    }
    try {
      if (instance instanceof _TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"]) {
        this.actualInstance = instance;
      } else if (!!_TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"].validateJSON && _TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"].validateJSON(instance)) {
        // plain JS object
        // create TokenizationUpdateBlocklistAddressesEstimateFeeParams from JS object
        this.actualInstance = _TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"].constructFromObject(instance);
      } else {
        if (_TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"].constructFromObject(instance)) {
          if (!!_TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"].constructFromObject(instance).toJSON) {
            if (_TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"].constructFromObject(instance).toJSON()) {
              this.actualInstance = _TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"].constructFromObject(instance);
            }
          } else {
            this.actualInstance = _TokenizationUpdateBlocklistAddressesEstimateFeeParams["default"].constructFromObject(instance);
          }
        }
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TokenizationUpdateBlocklistAddressesEstimateFeeParams
      errorMessages.push("Failed to construct TokenizationUpdateBlocklistAddressesEstimateFeeParams: " + err);
    }
    try {
      if (instance instanceof _TokenizationToggleAllowlistEstimateFeeParams["default"]) {
        this.actualInstance = instance;
      } else if (!!_TokenizationToggleAllowlistEstimateFeeParams["default"].validateJSON && _TokenizationToggleAllowlistEstimateFeeParams["default"].validateJSON(instance)) {
        // plain JS object
        // create TokenizationToggleAllowlistEstimateFeeParams from JS object
        this.actualInstance = _TokenizationToggleAllowlistEstimateFeeParams["default"].constructFromObject(instance);
      } else {
        if (_TokenizationToggleAllowlistEstimateFeeParams["default"].constructFromObject(instance)) {
          if (!!_TokenizationToggleAllowlistEstimateFeeParams["default"].constructFromObject(instance).toJSON) {
            if (_TokenizationToggleAllowlistEstimateFeeParams["default"].constructFromObject(instance).toJSON()) {
              this.actualInstance = _TokenizationToggleAllowlistEstimateFeeParams["default"].constructFromObject(instance);
            }
          } else {
            this.actualInstance = _TokenizationToggleAllowlistEstimateFeeParams["default"].constructFromObject(instance);
          }
        }
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TokenizationToggleAllowlistEstimateFeeParams
      errorMessages.push("Failed to construct TokenizationToggleAllowlistEstimateFeeParams: " + err);
    }
    try {
      if (instance instanceof _TokenizationContractCallEstimateFeeParams["default"]) {
        this.actualInstance = instance;
      } else if (!!_TokenizationContractCallEstimateFeeParams["default"].validateJSON && _TokenizationContractCallEstimateFeeParams["default"].validateJSON(instance)) {
        // plain JS object
        // create TokenizationContractCallEstimateFeeParams from JS object
        this.actualInstance = _TokenizationContractCallEstimateFeeParams["default"].constructFromObject(instance);
      } else {
        if (_TokenizationContractCallEstimateFeeParams["default"].constructFromObject(instance)) {
          if (!!_TokenizationContractCallEstimateFeeParams["default"].constructFromObject(instance).toJSON) {
            if (_TokenizationContractCallEstimateFeeParams["default"].constructFromObject(instance).toJSON()) {
              this.actualInstance = _TokenizationContractCallEstimateFeeParams["default"].constructFromObject(instance);
            }
          } else {
            this.actualInstance = _TokenizationContractCallEstimateFeeParams["default"].constructFromObject(instance);
          }
        }
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TokenizationContractCallEstimateFeeParams
      errorMessages.push("Failed to construct TokenizationContractCallEstimateFeeParams: " + err);
    }

    // if (match > 1) {
    //    throw new Error("Multiple matches found constructing `TokenizationEstimateFeeRequestOperationParams` with oneOf schemas TokenizationBurnEstimateFeeParams, TokenizationContractCallEstimateFeeParams, TokenizationIssueEstimateFeeParams, TokenizationMintEstimateFeeParams, TokenizationPauseEstimateFeeParams, TokenizationToggleAllowlistEstimateFeeParams, TokenizationUnpauseEstimateFeeParams, TokenizationUpdateAllowlistAddressesEstimateFeeParams, TokenizationUpdateBlocklistAddressesEstimateFeeParams. Input: " + JSON.stringify(instance));
    // } else
    if (match === 0) {
      //    this.actualInstance = null; // clear the actual instance in case there are multiple matches
      //    throw new Error("No match found constructing `TokenizationEstimateFeeRequestOperationParams` with oneOf schemas TokenizationBurnEstimateFeeParams, TokenizationContractCallEstimateFeeParams, TokenizationIssueEstimateFeeParams, TokenizationMintEstimateFeeParams, TokenizationPauseEstimateFeeParams, TokenizationToggleAllowlistEstimateFeeParams, TokenizationUnpauseEstimateFeeParams, TokenizationUpdateAllowlistAddressesEstimateFeeParams, TokenizationUpdateBlocklistAddressesEstimateFeeParams. Details: " +
      //                    errorMessages.join(", "));
      return;
    } else {// only 1 match
      // the input is valid
    }
  }

  /**
   * Constructs a <code>TokenizationEstimateFeeRequestOperationParams</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TokenizationEstimateFeeRequestOperationParams} obj Optional instance to populate.
   * @return {module:model/TokenizationEstimateFeeRequestOperationParams} The populated <code>TokenizationEstimateFeeRequestOperationParams</code> instance.
   */
  return _createClass(TokenizationEstimateFeeRequestOperationParams, [{
    key: "getActualInstance",
    value:
    /**
     * Gets the actual instance, which can be <code>TokenizationBurnEstimateFeeParams</code>, <code>TokenizationContractCallEstimateFeeParams</code>, <code>TokenizationIssueEstimateFeeParams</code>, <code>TokenizationMintEstimateFeeParams</code>, <code>TokenizationPauseEstimateFeeParams</code>, <code>TokenizationToggleAllowlistEstimateFeeParams</code>, <code>TokenizationUnpauseEstimateFeeParams</code>, <code>TokenizationUpdateAllowlistAddressesEstimateFeeParams</code>, <code>TokenizationUpdateBlocklistAddressesEstimateFeeParams</code>.
     * @return {(module:model/TokenizationBurnEstimateFeeParams|module:model/TokenizationContractCallEstimateFeeParams|module:model/TokenizationIssueEstimateFeeParams|module:model/TokenizationMintEstimateFeeParams|module:model/TokenizationPauseEstimateFeeParams|module:model/TokenizationToggleAllowlistEstimateFeeParams|module:model/TokenizationUnpauseEstimateFeeParams|module:model/TokenizationUpdateAllowlistAddressesEstimateFeeParams|module:model/TokenizationUpdateBlocklistAddressesEstimateFeeParams)} The actual instance.
     */
    function getActualInstance() {
      return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>TokenizationBurnEstimateFeeParams</code>, <code>TokenizationContractCallEstimateFeeParams</code>, <code>TokenizationIssueEstimateFeeParams</code>, <code>TokenizationMintEstimateFeeParams</code>, <code>TokenizationPauseEstimateFeeParams</code>, <code>TokenizationToggleAllowlistEstimateFeeParams</code>, <code>TokenizationUnpauseEstimateFeeParams</code>, <code>TokenizationUpdateAllowlistAddressesEstimateFeeParams</code>, <code>TokenizationUpdateBlocklistAddressesEstimateFeeParams</code>.
     * @param {(module:model/TokenizationBurnEstimateFeeParams|module:model/TokenizationContractCallEstimateFeeParams|module:model/TokenizationIssueEstimateFeeParams|module:model/TokenizationMintEstimateFeeParams|module:model/TokenizationPauseEstimateFeeParams|module:model/TokenizationToggleAllowlistEstimateFeeParams|module:model/TokenizationUnpauseEstimateFeeParams|module:model/TokenizationUpdateAllowlistAddressesEstimateFeeParams|module:model/TokenizationUpdateBlocklistAddressesEstimateFeeParams)} obj The actual instance.
     */
  }, {
    key: "setActualInstance",
    value: function setActualInstance(obj) {
      this.actualInstance = TokenizationEstimateFeeRequestOperationParams.constructFromObject(obj).getActualInstance();
    }
  }], [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      return new TokenizationEstimateFeeRequestOperationParams(data);
    }
  }]);
}();
/**
 * The chain ID where the token will be issued.
 * @member {String} chain_id
 */
_TokenizationEstimateFeeRequestOperationParams = TokenizationEstimateFeeRequestOperationParams;
/**
 * Create an instance of TokenizationEstimateFeeRequestOperationParams from a JSON string.
 * @param {string} json_string JSON string.
 * @return {module:model/TokenizationEstimateFeeRequestOperationParams} An instance of TokenizationEstimateFeeRequestOperationParams.
 */
_defineProperty(TokenizationEstimateFeeRequestOperationParams, "fromJSON", function (json_string) {
  return _TokenizationEstimateFeeRequestOperationParams.constructFromObject(JSON.parse(json_string));
});
TokenizationEstimateFeeRequestOperationParams.prototype['chain_id'] = undefined;

/**
 * @member {module:model/TokenizationTokenOperationSource} source
 */
TokenizationEstimateFeeRequestOperationParams.prototype['source'] = undefined;

/**
 * @member {module:model/TokenizationIssueTokenParamsTokenParams} token_params
 */
TokenizationEstimateFeeRequestOperationParams.prototype['token_params'] = undefined;

/**
 * @member {module:model/TokenizationOperationType} operation_type
 */
TokenizationEstimateFeeRequestOperationParams.prototype['operation_type'] = undefined;

/**
 * Details for each token mint, including amount and address to mint to.
 * @member {Array.<module:model/TokenizationMintTokenParamsMintsInner>} mints
 */
TokenizationEstimateFeeRequestOperationParams.prototype['mints'] = undefined;

/**
 * The ID of the token.
 * @member {String} token_id
 */
TokenizationEstimateFeeRequestOperationParams.prototype['token_id'] = undefined;

/**
 * Details for each token burn, including amount and address to burn from.
 * @member {Array.<module:model/TokenizationBurnTokenParamsBurnsInner>} burns
 */
TokenizationEstimateFeeRequestOperationParams.prototype['burns'] = undefined;

/**
 * @member {module:model/TokenizationUpdateAddressAction} action
 */
TokenizationEstimateFeeRequestOperationParams.prototype['action'] = undefined;

/**
 * A list of addresses to manage. For 'add' operations, notes can be provided. For 'remove' operations, notes are ignored.
 * @member {Array.<module:model/TokenizationUpdateBlocklistAddressesParamsAddressesInner>} addresses
 */
TokenizationEstimateFeeRequestOperationParams.prototype['addresses'] = undefined;

/**
 * Whether to activate the allowlist feature for the token.
 * @member {Boolean} activation
 */
TokenizationEstimateFeeRequestOperationParams.prototype['activation'] = undefined;

/**
 * @member {module:model/TokenizationContractCallParamsData} data
 */
TokenizationEstimateFeeRequestOperationParams.prototype['data'] = undefined;
TokenizationEstimateFeeRequestOperationParams.OneOf = ["TokenizationBurnEstimateFeeParams", "TokenizationContractCallEstimateFeeParams", "TokenizationIssueEstimateFeeParams", "TokenizationMintEstimateFeeParams", "TokenizationPauseEstimateFeeParams", "TokenizationToggleAllowlistEstimateFeeParams", "TokenizationUnpauseEstimateFeeParams", "TokenizationUpdateAllowlistAddressesEstimateFeeParams", "TokenizationUpdateBlocklistAddressesEstimateFeeParams"];
var _default = exports["default"] = TokenizationEstimateFeeRequestOperationParams;