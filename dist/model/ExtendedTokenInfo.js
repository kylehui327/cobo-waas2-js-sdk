"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _TokenAssetModelType = _interopRequireDefault(require("./TokenAssetModelType"));
var _TokenInfo = _interopRequireDefault(require("./TokenInfo"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The ExtendedTokenInfo model module.
 * @module model/ExtendedTokenInfo
 */
var ExtendedTokenInfo = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ExtendedTokenInfo</code>.
   * The token information, including whether the token can be deposited or withdrawn.
   * @alias module:model/ExtendedTokenInfo
   * @implements module:model/TokenInfo
   * @param token_id {String} The token ID, which is the unique identifier of a token.
   * @param chain_id {String} The ID of the chain on which the token operates.
   */
  function ExtendedTokenInfo(token_id, chain_id) {
    _classCallCheck(this, ExtendedTokenInfo);
    _TokenInfo["default"].initialize(this, token_id, chain_id);
    ExtendedTokenInfo.initialize(this, token_id, chain_id);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(ExtendedTokenInfo, null, [{
    key: "initialize",
    value: function initialize(obj, token_id, chain_id) {
      obj['token_id'] = token_id;
      obj['chain_id'] = chain_id;
    }

    /**
     * Constructs a <code>ExtendedTokenInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtendedTokenInfo} obj Optional instance to populate.
     * @return {module:model/ExtendedTokenInfo} The populated <code>ExtendedTokenInfo</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ExtendedTokenInfo();
        _TokenInfo["default"].constructFromObject(data, obj);
        if (data.hasOwnProperty('token_id')) {
          obj['token_id'] = _ApiClient["default"].convertToType(data['token_id'], 'String');
        }
        if (data.hasOwnProperty('chain_id')) {
          obj['chain_id'] = _ApiClient["default"].convertToType(data['chain_id'], 'String');
        }
        if (data.hasOwnProperty('asset_id')) {
          obj['asset_id'] = _ApiClient["default"].convertToType(data['asset_id'], 'String');
        }
        if (data.hasOwnProperty('symbol')) {
          obj['symbol'] = _ApiClient["default"].convertToType(data['symbol'], 'String');
        }
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }
        if (data.hasOwnProperty('decimal')) {
          obj['decimal'] = _ApiClient["default"].convertToType(data['decimal'], 'Number');
        }
        if (data.hasOwnProperty('icon_url')) {
          obj['icon_url'] = _ApiClient["default"].convertToType(data['icon_url'], 'String');
        }
        if (data.hasOwnProperty('token_address')) {
          obj['token_address'] = _ApiClient["default"].convertToType(data['token_address'], 'String');
        }
        if (data.hasOwnProperty('fee_token_id')) {
          obj['fee_token_id'] = _ApiClient["default"].convertToType(data['fee_token_id'], 'String');
        }
        if (data.hasOwnProperty('can_deposit')) {
          obj['can_deposit'] = _ApiClient["default"].convertToType(data['can_deposit'], 'Boolean');
        }
        if (data.hasOwnProperty('can_withdraw')) {
          obj['can_withdraw'] = _ApiClient["default"].convertToType(data['can_withdraw'], 'Boolean');
        }
        if (data.hasOwnProperty('dust_threshold')) {
          obj['dust_threshold'] = _ApiClient["default"].convertToType(data['dust_threshold'], 'String');
        }
        if (data.hasOwnProperty('custodial_minimum_deposit_threshold')) {
          obj['custodial_minimum_deposit_threshold'] = _ApiClient["default"].convertToType(data['custodial_minimum_deposit_threshold'], 'String');
        }
        if (data.hasOwnProperty('asset_model_type')) {
          obj['asset_model_type'] = _TokenAssetModelType["default"].constructFromObject(data['asset_model_type']);
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtendedTokenInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtendedTokenInfo</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(ExtendedTokenInfo.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['token_id'] && !(typeof data['token_id'] === 'string' || data['token_id'] instanceof String)) {
        throw new Error("Expected the field `token_id` to be a primitive type in the JSON string but got " + data['token_id']);
      }
      // ensure the json data is a string
      if (data['chain_id'] && !(typeof data['chain_id'] === 'string' || data['chain_id'] instanceof String)) {
        throw new Error("Expected the field `chain_id` to be a primitive type in the JSON string but got " + data['chain_id']);
      }
      // ensure the json data is a string
      if (data['asset_id'] && !(typeof data['asset_id'] === 'string' || data['asset_id'] instanceof String)) {
        throw new Error("Expected the field `asset_id` to be a primitive type in the JSON string but got " + data['asset_id']);
      }
      // ensure the json data is a string
      if (data['symbol'] && !(typeof data['symbol'] === 'string' || data['symbol'] instanceof String)) {
        throw new Error("Expected the field `symbol` to be a primitive type in the JSON string but got " + data['symbol']);
      }
      // ensure the json data is a string
      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      }
      // ensure the json data is a string
      if (data['icon_url'] && !(typeof data['icon_url'] === 'string' || data['icon_url'] instanceof String)) {
        throw new Error("Expected the field `icon_url` to be a primitive type in the JSON string but got " + data['icon_url']);
      }
      // ensure the json data is a string
      if (data['token_address'] && !(typeof data['token_address'] === 'string' || data['token_address'] instanceof String)) {
        throw new Error("Expected the field `token_address` to be a primitive type in the JSON string but got " + data['token_address']);
      }
      // ensure the json data is a string
      if (data['fee_token_id'] && !(typeof data['fee_token_id'] === 'string' || data['fee_token_id'] instanceof String)) {
        throw new Error("Expected the field `fee_token_id` to be a primitive type in the JSON string but got " + data['fee_token_id']);
      }
      // ensure the json data is a string
      if (data['dust_threshold'] && !(typeof data['dust_threshold'] === 'string' || data['dust_threshold'] instanceof String)) {
        throw new Error("Expected the field `dust_threshold` to be a primitive type in the JSON string but got " + data['dust_threshold']);
      }
      // ensure the json data is a string
      if (data['custodial_minimum_deposit_threshold'] && !(typeof data['custodial_minimum_deposit_threshold'] === 'string' || data['custodial_minimum_deposit_threshold'] instanceof String)) {
        throw new Error("Expected the field `custodial_minimum_deposit_threshold` to be a primitive type in the JSON string but got " + data['custodial_minimum_deposit_threshold']);
      }
      return true;
    }
  }]);
}();
ExtendedTokenInfo.RequiredProperties = ["token_id", "chain_id"];

/**
 * The token ID, which is the unique identifier of a token.
 * @member {String} token_id
 */
ExtendedTokenInfo.prototype['token_id'] = undefined;

/**
 * The ID of the chain on which the token operates.
 * @member {String} chain_id
 */
ExtendedTokenInfo.prototype['chain_id'] = undefined;

/**
 * (This concept applies to Exchange Wallets only) The asset ID. An asset ID is the unique identifier of the asset held within your linked exchange account.
 * @member {String} asset_id
 */
ExtendedTokenInfo.prototype['asset_id'] = undefined;

/**
 * The token symbol, which is the abbreviated name of a token.
 * @member {String} symbol
 */
ExtendedTokenInfo.prototype['symbol'] = undefined;

/**
 * The token name, which is the full name of a token.
 * @member {String} name
 */
ExtendedTokenInfo.prototype['name'] = undefined;

/**
 * The token decimal.
 * @member {Number} decimal
 */
ExtendedTokenInfo.prototype['decimal'] = undefined;

/**
 * The URL of the token icon.
 * @member {String} icon_url
 */
ExtendedTokenInfo.prototype['icon_url'] = undefined;

/**
 * The token address, if applicable.
 * @member {String} token_address
 */
ExtendedTokenInfo.prototype['token_address'] = undefined;

/**
 * The fee token ID. A fee token is the token with which you pay transaction fees.
 * @member {String} fee_token_id
 */
ExtendedTokenInfo.prototype['fee_token_id'] = undefined;

/**
 * Whether the token can be deposited.  - `true`: The token can be deposited.  - `false`: The token cannot be deposited. 
 * @member {Boolean} can_deposit
 * @default false
 */
ExtendedTokenInfo.prototype['can_deposit'] = false;

/**
 * Whether the token can be withdrawn.  - `true`: The token can be withdrawn.  - `false`: The token cannot be withdrawn. 
 * @member {Boolean} can_withdraw
 * @default false
 */
ExtendedTokenInfo.prototype['can_withdraw'] = false;

/**
 * The minimum withdrawal amount for Custodial Wallets. If your withdrawal amount is smaller than this threshold, the withdrawal request will receive an error.  Note: [Cobo Loop](https://manuals.cobo.com/en/portal/custodial-wallets/cobo-loop) transfers do not have this limitation. 
 * @member {String} dust_threshold
 */
ExtendedTokenInfo.prototype['dust_threshold'] = undefined;

/**
 * The minimum deposit amount for Custodial Wallets. If the amount you deposit to a Custodial Wallet is smaller than this threshold, the deposit will not show up on Cobo Portal or trigger any webhook events.  Note: [Cobo Loop](https://manuals.cobo.com/en/portal/custodial-wallets/cobo-loop)transfers do not have this limitation. 
 * @member {String} custodial_minimum_deposit_threshold
 */
ExtendedTokenInfo.prototype['custodial_minimum_deposit_threshold'] = undefined;

/**
 * @member {module:model/TokenAssetModelType} asset_model_type
 */
ExtendedTokenInfo.prototype['asset_model_type'] = undefined;

// Implement TokenInfo interface:
/**
 * The token ID, which is the unique identifier of a token.
 * @member {String} token_id
 */
_TokenInfo["default"].prototype['token_id'] = undefined;
/**
 * The ID of the chain on which the token operates.
 * @member {String} chain_id
 */
_TokenInfo["default"].prototype['chain_id'] = undefined;
/**
 * (This concept applies to Exchange Wallets only) The asset ID. An asset ID is the unique identifier of the asset held within your linked exchange account.
 * @member {String} asset_id
 */
_TokenInfo["default"].prototype['asset_id'] = undefined;
/**
 * The token symbol, which is the abbreviated name of a token.
 * @member {String} symbol
 */
_TokenInfo["default"].prototype['symbol'] = undefined;
/**
 * The token name, which is the full name of a token.
 * @member {String} name
 */
_TokenInfo["default"].prototype['name'] = undefined;
/**
 * The token decimal.
 * @member {Number} decimal
 */
_TokenInfo["default"].prototype['decimal'] = undefined;
/**
 * The URL of the token icon.
 * @member {String} icon_url
 */
_TokenInfo["default"].prototype['icon_url'] = undefined;
/**
 * The token address, if applicable.
 * @member {String} token_address
 */
_TokenInfo["default"].prototype['token_address'] = undefined;
/**
 * The fee token ID. A fee token is the token with which you pay transaction fees.
 * @member {String} fee_token_id
 */
_TokenInfo["default"].prototype['fee_token_id'] = undefined;
/**
 * Whether deposits are enabled for this token.
 * @member {Boolean} can_deposit
 */
_TokenInfo["default"].prototype['can_deposit'] = undefined;
/**
 * Whether withdrawals are enabled for this token.
 * @member {Boolean} can_withdraw
 */
_TokenInfo["default"].prototype['can_withdraw'] = undefined;
/**
 * The minimum withdrawal amount for Custodial Wallets. If your withdrawal amount is smaller than this threshold, the withdrawal request will receive an error.  Note: [Cobo Loop](https://manuals.cobo.com/en/portal/custodial-wallets/cobo-loop) transfers do not have this limitation. 
 * @member {String} dust_threshold
 */
_TokenInfo["default"].prototype['dust_threshold'] = undefined;
/**
 * The minimum deposit amount for Custodial Wallets. If the amount you deposit to a Custodial Wallet is smaller than this threshold, the deposit will not show up on Cobo Portal or trigger any webhook events.  Note: [Cobo Loop](https://manuals.cobo.com/en/portal/custodial-wallets/cobo-loop)transfers do not have this limitation. 
 * @member {String} custodial_minimum_deposit_threshold
 */
_TokenInfo["default"].prototype['custodial_minimum_deposit_threshold'] = undefined;
/**
 * @member {module:model/TokenAssetModelType} asset_model_type
 */
_TokenInfo["default"].prototype['asset_model_type'] = undefined;
var _default = exports["default"] = ExtendedTokenInfo;