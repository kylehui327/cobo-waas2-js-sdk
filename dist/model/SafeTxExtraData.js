"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _SafeTxDecodedData = _interopRequireDefault(require("./SafeTxDecodedData"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The SafeTxExtraData model module.
 * @module model/SafeTxExtraData
 */
var SafeTxExtraData = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>SafeTxExtraData</code>.
   * The information used to construct and sign Safe{Wallet} transactions using the EIP-712 standard.
   * @alias module:model/SafeTxExtraData
   * @param to {String} The recipient address of the transaction.
   * @param value {String} The human-readable transaction value, for example, `1 ETH`.
   * @param data {String} The transaction call data.
   * @param domain_hash {String} The EIP-712 domain separator hash.
   * @param message_hash {String} The hash of the structured message to be signed.
   * @param safe_address {String} The address of the Safe contract.
   * @param safe_tx_hash {String} The hash of the transaction.
   * @param safe_nonce {Number} The nonce of the transaction.
   * @param operation {String} The operation type for the transaction.
   */
  function SafeTxExtraData(to, value, data, domain_hash, message_hash, safe_address, safe_tx_hash, safe_nonce, operation) {
    _classCallCheck(this, SafeTxExtraData);
    SafeTxExtraData.initialize(this, to, value, data, domain_hash, message_hash, safe_address, safe_tx_hash, safe_nonce, operation);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(SafeTxExtraData, null, [{
    key: "initialize",
    value: function initialize(obj, to, value, data, domain_hash, message_hash, safe_address, safe_tx_hash, safe_nonce, operation) {
      obj['to'] = to;
      obj['value'] = value;
      obj['data'] = data;
      obj['domain_hash'] = domain_hash;
      obj['message_hash'] = message_hash;
      obj['safe_address'] = safe_address;
      obj['safe_tx_hash'] = safe_tx_hash;
      obj['safe_nonce'] = safe_nonce;
      obj['operation'] = operation;
    }

    /**
     * Constructs a <code>SafeTxExtraData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SafeTxExtraData} obj Optional instance to populate.
     * @return {module:model/SafeTxExtraData} The populated <code>SafeTxExtraData</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new SafeTxExtraData();
        if (data.hasOwnProperty('to')) {
          obj['to'] = _ApiClient["default"].convertToType(data['to'], 'String');
        }
        if (data.hasOwnProperty('value')) {
          obj['value'] = _ApiClient["default"].convertToType(data['value'], 'String');
        }
        if (data.hasOwnProperty('data')) {
          obj['data'] = _ApiClient["default"].convertToType(data['data'], 'String');
        }
        if (data.hasOwnProperty('domain_hash')) {
          obj['domain_hash'] = _ApiClient["default"].convertToType(data['domain_hash'], 'String');
        }
        if (data.hasOwnProperty('message_hash')) {
          obj['message_hash'] = _ApiClient["default"].convertToType(data['message_hash'], 'String');
        }
        if (data.hasOwnProperty('safe_address')) {
          obj['safe_address'] = _ApiClient["default"].convertToType(data['safe_address'], 'String');
        }
        if (data.hasOwnProperty('safe_tx_hash')) {
          obj['safe_tx_hash'] = _ApiClient["default"].convertToType(data['safe_tx_hash'], 'String');
        }
        if (data.hasOwnProperty('safe_nonce')) {
          obj['safe_nonce'] = _ApiClient["default"].convertToType(data['safe_nonce'], 'Number');
        }
        if (data.hasOwnProperty('operation')) {
          obj['operation'] = _ApiClient["default"].convertToType(data['operation'], 'String');
        }
        if (data.hasOwnProperty('gas_token_addr')) {
          obj['gas_token_addr'] = _ApiClient["default"].convertToType(data['gas_token_addr'], 'String');
        }
        if (data.hasOwnProperty('safe_tx_gas')) {
          obj['safe_tx_gas'] = _ApiClient["default"].convertToType(data['safe_tx_gas'], 'Number');
        }
        if (data.hasOwnProperty('base_gas')) {
          obj['base_gas'] = _ApiClient["default"].convertToType(data['base_gas'], 'Number');
        }
        if (data.hasOwnProperty('gas_price')) {
          obj['gas_price'] = _ApiClient["default"].convertToType(data['gas_price'], 'String');
        }
        if (data.hasOwnProperty('refund_receiver')) {
          obj['refund_receiver'] = _ApiClient["default"].convertToType(data['refund_receiver'], 'String');
        }
        if (data.hasOwnProperty('to_contract_name')) {
          obj['to_contract_name'] = _ApiClient["default"].convertToType(data['to_contract_name'], 'String');
        }
        if (data.hasOwnProperty('decoded_data')) {
          obj['decoded_data'] = _SafeTxDecodedData["default"].constructFromObject(data['decoded_data']);
        }
        if (data.hasOwnProperty('signature')) {
          obj['signature'] = _ApiClient["default"].convertToType(data['signature'], 'String');
        }
        if (data.hasOwnProperty('wei')) {
          obj['wei'] = _ApiClient["default"].convertToType(data['wei'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SafeTxExtraData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SafeTxExtraData</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(SafeTxExtraData.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
        throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
      }
      // ensure the json data is a string
      if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
        throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
      }
      // ensure the json data is a string
      if (data['data'] && !(typeof data['data'] === 'string' || data['data'] instanceof String)) {
        throw new Error("Expected the field `data` to be a primitive type in the JSON string but got " + data['data']);
      }
      // ensure the json data is a string
      if (data['domain_hash'] && !(typeof data['domain_hash'] === 'string' || data['domain_hash'] instanceof String)) {
        throw new Error("Expected the field `domain_hash` to be a primitive type in the JSON string but got " + data['domain_hash']);
      }
      // ensure the json data is a string
      if (data['message_hash'] && !(typeof data['message_hash'] === 'string' || data['message_hash'] instanceof String)) {
        throw new Error("Expected the field `message_hash` to be a primitive type in the JSON string but got " + data['message_hash']);
      }
      // ensure the json data is a string
      if (data['safe_address'] && !(typeof data['safe_address'] === 'string' || data['safe_address'] instanceof String)) {
        throw new Error("Expected the field `safe_address` to be a primitive type in the JSON string but got " + data['safe_address']);
      }
      // ensure the json data is a string
      if (data['safe_tx_hash'] && !(typeof data['safe_tx_hash'] === 'string' || data['safe_tx_hash'] instanceof String)) {
        throw new Error("Expected the field `safe_tx_hash` to be a primitive type in the JSON string but got " + data['safe_tx_hash']);
      }
      // ensure the json data is a string
      if (data['operation'] && !(typeof data['operation'] === 'string' || data['operation'] instanceof String)) {
        throw new Error("Expected the field `operation` to be a primitive type in the JSON string but got " + data['operation']);
      }
      // ensure the json data is a string
      if (data['gas_token_addr'] && !(typeof data['gas_token_addr'] === 'string' || data['gas_token_addr'] instanceof String)) {
        throw new Error("Expected the field `gas_token_addr` to be a primitive type in the JSON string but got " + data['gas_token_addr']);
      }
      // ensure the json data is a string
      if (data['gas_price'] && !(typeof data['gas_price'] === 'string' || data['gas_price'] instanceof String)) {
        throw new Error("Expected the field `gas_price` to be a primitive type in the JSON string but got " + data['gas_price']);
      }
      // ensure the json data is a string
      if (data['refund_receiver'] && !(typeof data['refund_receiver'] === 'string' || data['refund_receiver'] instanceof String)) {
        throw new Error("Expected the field `refund_receiver` to be a primitive type in the JSON string but got " + data['refund_receiver']);
      }
      // ensure the json data is a string
      if (data['to_contract_name'] && !(typeof data['to_contract_name'] === 'string' || data['to_contract_name'] instanceof String)) {
        throw new Error("Expected the field `to_contract_name` to be a primitive type in the JSON string but got " + data['to_contract_name']);
      }
      // validate the optional field `decoded_data`
      if (data['decoded_data']) {
        // data not null
        if (!!_SafeTxDecodedData["default"].validateJSON) {
          _SafeTxDecodedData["default"].validateJSON(data['decoded_data']);
        }
      }
      // ensure the json data is a string
      if (data['signature'] && !(typeof data['signature'] === 'string' || data['signature'] instanceof String)) {
        throw new Error("Expected the field `signature` to be a primitive type in the JSON string but got " + data['signature']);
      }
      // ensure the json data is a string
      if (data['wei'] && !(typeof data['wei'] === 'string' || data['wei'] instanceof String)) {
        throw new Error("Expected the field `wei` to be a primitive type in the JSON string but got " + data['wei']);
      }
      return true;
    }
  }]);
}();
SafeTxExtraData.RequiredProperties = ["to", "value", "data", "domain_hash", "message_hash", "safe_address", "safe_tx_hash", "safe_nonce", "operation"];

/**
 * The recipient address of the transaction.
 * @member {String} to
 */
SafeTxExtraData.prototype['to'] = undefined;

/**
 * The human-readable transaction value, for example, `1 ETH`.
 * @member {String} value
 */
SafeTxExtraData.prototype['value'] = undefined;

/**
 * The transaction call data.
 * @member {String} data
 */
SafeTxExtraData.prototype['data'] = undefined;

/**
 * The EIP-712 domain separator hash.
 * @member {String} domain_hash
 */
SafeTxExtraData.prototype['domain_hash'] = undefined;

/**
 * The hash of the structured message to be signed.
 * @member {String} message_hash
 */
SafeTxExtraData.prototype['message_hash'] = undefined;

/**
 * The address of the Safe contract.
 * @member {String} safe_address
 */
SafeTxExtraData.prototype['safe_address'] = undefined;

/**
 * The hash of the transaction.
 * @member {String} safe_tx_hash
 */
SafeTxExtraData.prototype['safe_tx_hash'] = undefined;

/**
 * The nonce of the transaction.
 * @member {Number} safe_nonce
 */
SafeTxExtraData.prototype['safe_nonce'] = undefined;

/**
 * The operation type for the transaction.
 * @member {String} operation
 */
SafeTxExtraData.prototype['operation'] = undefined;

/**
 * The address of the token used to pay gas.
 * @member {String} gas_token_addr
 */
SafeTxExtraData.prototype['gas_token_addr'] = undefined;

/**
 * The gas limit used for the transaction.
 * @member {Number} safe_tx_gas
 */
SafeTxExtraData.prototype['safe_tx_gas'] = undefined;

/**
 * The base gas for the transaction.
 * @member {Number} base_gas
 */
SafeTxExtraData.prototype['base_gas'] = undefined;

/**
 * The gas price used in the transaction.
 * @member {String} gas_price
 */
SafeTxExtraData.prototype['gas_price'] = undefined;

/**
 * The address used to receive the gas refund.
 * @member {String} refund_receiver
 */
SafeTxExtraData.prototype['refund_receiver'] = undefined;

/**
 * The name of the recipient contract (if available).
 * @member {String} to_contract_name
 */
SafeTxExtraData.prototype['to_contract_name'] = undefined;

/**
 * @member {module:model/SafeTxDecodedData} decoded_data
 */
SafeTxExtraData.prototype['decoded_data'] = undefined;

/**
 * The signature of the transaction (if signed by Cobo Signer).
 * @member {String} signature
 */
SafeTxExtraData.prototype['signature'] = undefined;

/**
 * The transaction amount in Wei.
 * @member {String} wei
 */
SafeTxExtraData.prototype['wei'] = undefined;
var _default = exports["default"] = SafeTxExtraData;