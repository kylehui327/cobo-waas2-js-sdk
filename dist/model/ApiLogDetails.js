"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The ApiLogDetails model module.
 * @module model/ApiLogDetails
 */
var ApiLogDetails = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ApiLogDetails</code>.
   * The information about an API log.
   * @alias module:model/ApiLogDetails
   * @param log_id {String} A unique identifier for the API log, used for tracking.
   * @param api_method {String} The HTTP method used for the API request.
   * @param api_endpoint {String} The endpoint of the API request.
   * @param status_code {Number} The HTTP status code returned by the API request.
   * @param ip_address {String} The client's IP address that made the API request.
   * @param request_timestamp {Number} The time when the API request was created, in Unix timestamp format, measured in milliseconds.
   * @param api_key {String} The API key used to call the API. For more details, refer to [API key](https://www.cobo.com/developers/v2/guides/overview/cobo-auth#api-key).
   * @param response_body {String} The response body of the API request.
   * @param query_params {String} The query parameters of the API request.
   * @param request_body {String} The request body of the API request.
   */
  function ApiLogDetails(log_id, api_method, api_endpoint, status_code, ip_address, request_timestamp, api_key, response_body, query_params, request_body) {
    _classCallCheck(this, ApiLogDetails);
    ApiLogDetails.initialize(this, log_id, api_method, api_endpoint, status_code, ip_address, request_timestamp, api_key, response_body, query_params, request_body);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(ApiLogDetails, null, [{
    key: "initialize",
    value: function initialize(obj, log_id, api_method, api_endpoint, status_code, ip_address, request_timestamp, api_key, response_body, query_params, request_body) {
      obj['log_id'] = log_id;
      obj['api_method'] = api_method;
      obj['api_endpoint'] = api_endpoint;
      obj['status_code'] = status_code;
      obj['ip_address'] = ip_address;
      obj['request_timestamp'] = request_timestamp;
      obj['api_key'] = api_key;
      obj['response_body'] = response_body;
      obj['query_params'] = query_params;
      obj['request_body'] = request_body;
    }

    /**
     * Constructs a <code>ApiLogDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiLogDetails} obj Optional instance to populate.
     * @return {module:model/ApiLogDetails} The populated <code>ApiLogDetails</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ApiLogDetails();
        if (data.hasOwnProperty('log_id')) {
          obj['log_id'] = _ApiClient["default"].convertToType(data['log_id'], 'String');
        }
        if (data.hasOwnProperty('api_method')) {
          obj['api_method'] = _ApiClient["default"].convertToType(data['api_method'], 'String');
        }
        if (data.hasOwnProperty('api_endpoint')) {
          obj['api_endpoint'] = _ApiClient["default"].convertToType(data['api_endpoint'], 'String');
        }
        if (data.hasOwnProperty('status_code')) {
          obj['status_code'] = _ApiClient["default"].convertToType(data['status_code'], 'Number');
        }
        if (data.hasOwnProperty('ip_address')) {
          obj['ip_address'] = _ApiClient["default"].convertToType(data['ip_address'], 'String');
        }
        if (data.hasOwnProperty('request_timestamp')) {
          obj['request_timestamp'] = _ApiClient["default"].convertToType(data['request_timestamp'], 'Number');
        }
        if (data.hasOwnProperty('api_key')) {
          obj['api_key'] = _ApiClient["default"].convertToType(data['api_key'], 'String');
        }
        if (data.hasOwnProperty('response_body')) {
          obj['response_body'] = _ApiClient["default"].convertToType(data['response_body'], 'String');
        }
        if (data.hasOwnProperty('query_params')) {
          obj['query_params'] = _ApiClient["default"].convertToType(data['query_params'], 'String');
        }
        if (data.hasOwnProperty('request_body')) {
          obj['request_body'] = _ApiClient["default"].convertToType(data['request_body'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiLogDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiLogDetails</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(ApiLogDetails.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['log_id'] && !(typeof data['log_id'] === 'string' || data['log_id'] instanceof String)) {
        throw new Error("Expected the field `log_id` to be a primitive type in the JSON string but got " + data['log_id']);
      }
      // ensure the json data is a string
      if (data['api_method'] && !(typeof data['api_method'] === 'string' || data['api_method'] instanceof String)) {
        throw new Error("Expected the field `api_method` to be a primitive type in the JSON string but got " + data['api_method']);
      }
      // ensure the json data is a string
      if (data['api_endpoint'] && !(typeof data['api_endpoint'] === 'string' || data['api_endpoint'] instanceof String)) {
        throw new Error("Expected the field `api_endpoint` to be a primitive type in the JSON string but got " + data['api_endpoint']);
      }
      // ensure the json data is a string
      if (data['ip_address'] && !(typeof data['ip_address'] === 'string' || data['ip_address'] instanceof String)) {
        throw new Error("Expected the field `ip_address` to be a primitive type in the JSON string but got " + data['ip_address']);
      }
      // ensure the json data is a string
      if (data['api_key'] && !(typeof data['api_key'] === 'string' || data['api_key'] instanceof String)) {
        throw new Error("Expected the field `api_key` to be a primitive type in the JSON string but got " + data['api_key']);
      }
      // ensure the json data is a string
      if (data['response_body'] && !(typeof data['response_body'] === 'string' || data['response_body'] instanceof String)) {
        throw new Error("Expected the field `response_body` to be a primitive type in the JSON string but got " + data['response_body']);
      }
      // ensure the json data is a string
      if (data['query_params'] && !(typeof data['query_params'] === 'string' || data['query_params'] instanceof String)) {
        throw new Error("Expected the field `query_params` to be a primitive type in the JSON string but got " + data['query_params']);
      }
      // ensure the json data is a string
      if (data['request_body'] && !(typeof data['request_body'] === 'string' || data['request_body'] instanceof String)) {
        throw new Error("Expected the field `request_body` to be a primitive type in the JSON string but got " + data['request_body']);
      }
      return true;
    }
  }]);
}();
ApiLogDetails.RequiredProperties = ["log_id", "api_method", "api_endpoint", "status_code", "ip_address", "request_timestamp", "api_key", "response_body", "query_params", "request_body"];

/**
 * A unique identifier for the API log, used for tracking.
 * @member {String} log_id
 */
ApiLogDetails.prototype['log_id'] = undefined;

/**
 * The HTTP method used for the API request.
 * @member {String} api_method
 */
ApiLogDetails.prototype['api_method'] = undefined;

/**
 * The endpoint of the API request.
 * @member {String} api_endpoint
 */
ApiLogDetails.prototype['api_endpoint'] = undefined;

/**
 * The HTTP status code returned by the API request.
 * @member {Number} status_code
 */
ApiLogDetails.prototype['status_code'] = undefined;

/**
 * The client's IP address that made the API request.
 * @member {String} ip_address
 */
ApiLogDetails.prototype['ip_address'] = undefined;

/**
 * The time when the API request was created, in Unix timestamp format, measured in milliseconds.
 * @member {Number} request_timestamp
 */
ApiLogDetails.prototype['request_timestamp'] = undefined;

/**
 * The API key used to call the API. For more details, refer to [API key](https://www.cobo.com/developers/v2/guides/overview/cobo-auth#api-key).
 * @member {String} api_key
 */
ApiLogDetails.prototype['api_key'] = undefined;

/**
 * The response body of the API request.
 * @member {String} response_body
 */
ApiLogDetails.prototype['response_body'] = undefined;

/**
 * The query parameters of the API request.
 * @member {String} query_params
 */
ApiLogDetails.prototype['query_params'] = undefined;

/**
 * The request body of the API request.
 * @member {String} request_body
 */
ApiLogDetails.prototype['request_body'] = undefined;
var _default = exports["default"] = ApiLogDetails;